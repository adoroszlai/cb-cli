package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*TopologyResponse topology response

swagger:model TopologyResponse
*/
type TopologyResponse struct {

	/* cloud platform
	 */
	CloudPlatform *string `json:"cloudPlatform,omitempty"`

	/* description
	 */
	Description *string `json:"description,omitempty"`

	/* endpoint
	 */
	Endpoint *string `json:"endpoint,omitempty"`

	/* id
	 */
	ID *int64 `json:"id,omitempty"`

	/* name
	 */
	Name *string `json:"name,omitempty"`

	/* nodes
	 */
	Nodes map[string]string `json:"nodes,omitempty"`
}

// Validate validates this topology response
func (m *TopologyResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNodes(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TopologyResponse) validateNodes(formats strfmt.Registry) error {

	if swag.IsZero(m.Nodes) { // not required
		return nil
	}

	if err := validate.Required("nodes", "body", m.Nodes); err != nil {
		return err
	}

	return nil
}
