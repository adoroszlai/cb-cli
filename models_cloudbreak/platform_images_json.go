package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*PlatformImagesJSON platform images json

swagger:model PlatformImagesJson
*/
type PlatformImagesJSON struct {

	/* default images
	 */
	Images map[string]map[string]string `json:"images,omitempty"`

	/* images regex
	 */
	ImagesRegex map[string]string `json:"imagesRegex,omitempty"`
}

// Validate validates this platform images json
func (m *PlatformImagesJSON) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateImages(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateImagesRegex(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PlatformImagesJSON) validateImages(formats strfmt.Registry) error {

	if swag.IsZero(m.Images) { // not required
		return nil
	}

	if swag.IsZero(m.Images) { // not required
		return nil
	}

	return nil
}

func (m *PlatformImagesJSON) validateImagesRegex(formats strfmt.Registry) error {

	if swag.IsZero(m.ImagesRegex) { // not required
		return nil
	}

	if err := validate.Required("imagesRegex", "body", m.ImagesRegex); err != nil {
		return err
	}

	return nil
}
