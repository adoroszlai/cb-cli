// Code generated by go-swagger; DO NOT EDIT.

package models_autoscale

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PromhetheusAlert promhetheus alert
// swagger:model PromhetheusAlert
type PromhetheusAlert struct {

	// Name of the alert
	// Pattern: ([a-zA-Z][-a-zA-Z0-9]*)
	AlertName string `json:"alertName,omitempty"`

	// Operator of the alert's query.
	AlertOperator string `json:"alertOperator,omitempty"`

	// Name of the predefined Prometheus alert rule that could be parameterized by the period and threshold fields.
	AlertRuleName string `json:"alertRuleName,omitempty"`

	// State of the alert
	AlertState string `json:"alertState,omitempty"`

	// Description of the alert
	Description string `json:"description,omitempty"`

	// Id of the alert
	ID int64 `json:"id,omitempty"`

	// Period of the alert
	Period int32 `json:"period,omitempty"`

	// Id of the scaling ploicy
	ScalingPolicy *ScalingPolicy `json:"scalingPolicy,omitempty"`

	// Id of the scaling ploicy
	ScalingPolicyID int64 `json:"scalingPolicyId,omitempty"`

	// Threshold of the alert in percent
	Threshold float64 `json:"threshold,omitempty"`
}

// Validate validates this promhetheus alert
func (m *PromhetheusAlert) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAlertName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateAlertOperator(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateAlertState(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateScalingPolicy(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PromhetheusAlert) validateAlertName(formats strfmt.Registry) error {

	if swag.IsZero(m.AlertName) { // not required
		return nil
	}

	if err := validate.Pattern("alertName", "body", string(m.AlertName), `([a-zA-Z][-a-zA-Z0-9]*)`); err != nil {
		return err
	}

	return nil
}

var promhetheusAlertTypeAlertOperatorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LESS_THAN","MORE_THAN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		promhetheusAlertTypeAlertOperatorPropEnum = append(promhetheusAlertTypeAlertOperatorPropEnum, v)
	}
}

const (
	// PromhetheusAlertAlertOperatorLESSTHAN captures enum value "LESS_THAN"
	PromhetheusAlertAlertOperatorLESSTHAN string = "LESS_THAN"
	// PromhetheusAlertAlertOperatorMORETHAN captures enum value "MORE_THAN"
	PromhetheusAlertAlertOperatorMORETHAN string = "MORE_THAN"
)

// prop value enum
func (m *PromhetheusAlert) validateAlertOperatorEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, promhetheusAlertTypeAlertOperatorPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PromhetheusAlert) validateAlertOperator(formats strfmt.Registry) error {

	if swag.IsZero(m.AlertOperator) { // not required
		return nil
	}

	// value enum
	if err := m.validateAlertOperatorEnum("alertOperator", "body", m.AlertOperator); err != nil {
		return err
	}

	return nil
}

var promhetheusAlertTypeAlertStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["OK","WARN","CRITICAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		promhetheusAlertTypeAlertStatePropEnum = append(promhetheusAlertTypeAlertStatePropEnum, v)
	}
}

const (
	// PromhetheusAlertAlertStateOK captures enum value "OK"
	PromhetheusAlertAlertStateOK string = "OK"
	// PromhetheusAlertAlertStateWARN captures enum value "WARN"
	PromhetheusAlertAlertStateWARN string = "WARN"
	// PromhetheusAlertAlertStateCRITICAL captures enum value "CRITICAL"
	PromhetheusAlertAlertStateCRITICAL string = "CRITICAL"
)

// prop value enum
func (m *PromhetheusAlert) validateAlertStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, promhetheusAlertTypeAlertStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PromhetheusAlert) validateAlertState(formats strfmt.Registry) error {

	if swag.IsZero(m.AlertState) { // not required
		return nil
	}

	// value enum
	if err := m.validateAlertStateEnum("alertState", "body", m.AlertState); err != nil {
		return err
	}

	return nil
}

func (m *PromhetheusAlert) validateScalingPolicy(formats strfmt.Registry) error {

	if swag.IsZero(m.ScalingPolicy) { // not required
		return nil
	}

	if m.ScalingPolicy != nil {

		if err := m.ScalingPolicy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("scalingPolicy")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PromhetheusAlert) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PromhetheusAlert) UnmarshalBinary(b []byte) error {
	var res PromhetheusAlert
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
